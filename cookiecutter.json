{
    "git_base_url": "https://github.com/deephdc",
    "model_name": "",
    "__model_source": "{{ cookiecutter.model_name|lower|replace(' ', '_')|replace('-', '_') }}",
    "package_slug": "{{ cookiecutter.model_name|lower|replace(' ', '-') ~ '-api' }}",
    "package_name": "{{ cookiecutter.model_name|lower|replace(' ', '_') ~ '_api' }}",
    "author_name": "",
    "author_email": "",
    "description": "",
    "app_version": "0.0.1",
    "open_source_license": [ "MIT", "Apache 2.0", "BSD-3-Clause", "No license file" ],
    "dockerhub_user": "deephdc",
    "docker_baseimage": "tensorflow/tensorflow",
    "baseimage_cpu_tag": "2.9.1",
    "baseimage_gpu_tag": "2.9.1-gpu",
    "failure_notify": [ "no", "yes" ],

    "__prompts__": {
        "git_base_url": "Remote URL to host your new repositories (git), e.g.\n\thttps://github.com/deephdc (i.e. at github).\n\thttps://git.scc.kit.edu/deep (or somewhere else):\n",
        "model_name": "Name of the model (without 'api'):\n",
        "package_slug": "URL-friendly version of the model api name.\n\tThis makes it suitable for use in URLs, filenames and other places.\n",
        "package_name": "Unique identifier for the model api package.\n\tAlso defines the repository name, added after \"git_base_url\" (see above).\n\tShould be a valid Python name:\n",
        "author_name": "Author name(s) (and/or your organization/company/team).\n\tIf many, separate by comma:\n",
        "author_email": "E-Mail(s) of main author(s).\n\tIf many, separate by comma:\n",
        "description": "A short description of the project:\n",
        "app_version": "Application version (expects X.Y.Z (Major.Minor.Patch)):\n",
        "open_source_license": "Select one of the licenses, default is MIT.\n\tFor more info: https://opensource.org/licenses:",
        "dockerhub_user": "User account at hub.docker.com, e.g. 'deephdc' in https://hub.docker.com/u/deephdc:\n",
        "docker_baseimage": "Docker image your Dockerfile starts from (FROM <docker_baseimage>).\n\tDo not provide the tag, yet:\n",
        "baseimage_cpu_tag": "CPU tag for the baseimage, e.g. 2.9.1\n\tShould match and use python3!:\n",
        "baseimage_gpu_tag": "GPU tag for the baseimage, e.g. 2.9.1-gpu\n\tShould match and use python3!:\n",
        "failure_notify": "Receive an email if module build fails:"
    }
}
